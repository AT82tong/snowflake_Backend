============= Account management =============
register: /snowflake/account/registration
----------------------------
Description: 
    checks duplicate useremail/name and add to database, gives class=0 permission
Input:
    {
        "email": <String>,
        "password": <String>,
        "username": <String>
    }
Result: 
    {
        "status": 200
    }
    {
        "status": 201,
        "err_message": "duplicate email exists"
    }
    {
        "status": 202,
        "err_message": "duplicate username exists"
    }
----------------------------

Send Verification Code: /snowflake/account/sendVeriCode
----------------------------
Description:
    send verification code to given email
Input:
    {
        "email": <String>
    }
Result:
    {
        "status": 200
    }
----------------------------

Check Verification Code: /snowflake/account/checkVeriCode
----------------------------
Description:
    check verification code to given account, set class=1 permission
Input:
    {
        "email": <String>
    }
Result:
    {
        "status": 200
    }
    {
        "status": 203,
        "err_message": "The code entered is incorrect"
    }

----------------------------

Login: /snowflake/account/login
----------------------------
Description:
    check if useremail matches with password, if yes, give auth token(used to ensure only authorized person can do certain functionalities)
Input:
    {
        "email": <String>,
        "password": <String>
    }
Result:
    {
        "status": 200,
        "token": token
    }
    {
        "status": 204,
        "err_message": "email does not exist"
    }
    {
        "status": 205,
        "err_message": "incorrect password"
    }

----------------------------
View Profile: 
/snowflake/profile/viewAll (Tested, others havn't been tested yet)
/snowflake/profile/viewDefaulticon
/snowflake/profile/viewDescription
/snowflake/profile/viewUsername
/snowflake/profile/viewPreferredname
----------------------------
Description:
    view corresponding fields in profiles
Input (for editAll):
    {
        "email": <String>
    }
Result:
    {
        "status": 200
        "username": "AT",
        "email": "an82@purdue.edu",
        "description": "",
        "defaulticon": 0,
        "preferredname": null,
        "class": 0,
        "posted": [
        {
            "publisherEmail": "an82@purdue.edu",
            "serviceTitle": "Title10",
            "createdTime": null,
            "price": 12.34,
            "description": "AT LOVE KENNY!!!!!!",
            "buyers": "{\"content\":[]}",
            "uid": 12
        },
        {
            "publisherEmail": "an82@purdue.edu",
            "serviceTitle": "Title11",
            "createdTime": null,
            "price": 12.34,
            "description": "AT LOVE KENNY!!!!!!",
            "buyers": "{\"content\":[]}",
            "uid": 13
        }
        ]
    }
    {
        "status": 209,
        "err_message": "empty useremail"
    }
    {
        "status": 210,
        "err_message": "cannot find corresponding account by email"
    }




----------------------------
Edit Profile: 
/snowflake/profile/editAll (Tested, others havn't been tested yet)
/snowflake/profile/editDefaulticon
/snowflake/profile/editDescription
/snowflake/profile/editUsername
/snowflake/profile/editPreferredname
----------------------------
Description:
    edit corresponding fields in profiles, requires auth tokens(obtained from login)
Input (for editAll):
    {
        "username": <String>,
	    "defaulticon": <Integer>,
	    "description": <String>,
	    "preferredname": <String>
    }
Result:
    {
        "status": 200
    }
    {
        "status": 206,
        "err_message": "username exists"
    }


============= Post management =============
Post new: 
/snowflake/post/createPost 
----------------------------
Description:
    Create a new post and save into posted list in profile
Input:
    {
        "publisherEmail": <String>,
	    "serviceTitle": <String>,
	    "description": <String>,
	    "price": <Double(8,2)>
    }
Result:
    {
        "status": 200
    }
    {
        "status": 207,
        "err_message": "duplicate title exists"
    }
    {
        "status": 208,
        "err_message": "Post has been posted"
    }


----------------------------
view post: 
/snowflake/post/viewPost 
----------------------------
Description:
    Create a new post and save into posted list in profile
Input:
    {
        "uid" : <Integer>
    }
Result:
    {
        "status": 200,
        "publisherEmail": "an82@purdue.edu",
        "serviceTitle": "Title5",
        "createdTime": null,
        "price": 12.34,
        "description": "AT LOVE KENNY!!!!!!",
        "buyers": "{\"content\":[]}"
    }
    {
        "status": 211,
        "err_message": "empty uid"
    }
    {
        "status": 212,
       "err_message": "can't find post information by given uid"
    }


============= Request management =============
============= ??? management =============